<?php

DEFINE('LAST_RETRIEVED_TIMESTAMP', 'weather_last_retrieved_timestamp');

/**
 *  Implements hook_menu().
 */
function weather_menu() {
  $items = array();

  $items['weather'] = array(
    'title' => 'Weather',
    'page callback' => 'weather_view',
    'access callback' => TRUE,
    'file' => 'includes/weather.pages.inc',
  );

  $items['admin/config/services/weather'] = array(
    'title' => 'Weather',
    'description' => 'Configure the weather service.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('weather_configure'),
    'access arguments' => array('configure weather'),
    'file' => 'includes/weather.admin.inc',
  );

  return $items;
}

/**
 *  Implements hook_permission().
 */
function weather_permission() {
  return array(
    'configure weather' => array(
      'title' => t('Configure weather'),
      'description' => t('Configure the weather service.'),
    ),
  );
}

/**
 *  Implements hook_block_info().
 */
function weather_block_info() {
  $blocks = array();

  $blocks['weather'] = array(
    'info' => 'Weather',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 *  Implements hook_block_view().
 */
function weather_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'weather':
      $block['subject'] = t('Current weather');

      $city = variable_get('weather_city', 'Milano');
      $timestamp = variable_get(LAST_RETRIEVED_TIMESTAMP);

      $block['content'] = array(
        '#theme' => 'weather',
        '#timestamp' => $timestamp,
        '#city' => $city,
        '#pre_render' => array('current_weather_cache_pre_render'),
        '#cache' => array(
          'keys' => array('weather', $city),
        ),
      );
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function weather_theme() {
  return array(
    'weather' => array(
      'template' => 'weather',
      'variables' => array('data' => NULL, 'timestamp' => NULL),
    ),
  );
}

/* API */

/**
 * @param $city
 *
 * @return mixed
 */
function weather_get_weather($city) {
  if ($data = cache_get('weather:' . $city)) {
    return $data->data;
  }
  else {
    $response = drupal_http_request('http://api.openweathermap.org/data/2.5/weather?q=' . $city . ',it&units=metric');

    $data = json_decode($response->data);
    cache_set('weather:' . $city, $data);

    variable_set(LAST_RETRIEVED_TIMESTAMP, time());

    return $data;
  }
}

/* private functions */

/**
 * @param $element
 */
function current_weather_cache_pre_render($element) {
  $element['#data'] = weather_get_weather($element['#city']);

  return $element;
}
